<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="RegisterInstances" type="AutoSnapper.RegisterInstancesConfig, AutoSnapper" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
  </configSections>
  <appSettings>
    <!--Your AWS Access Key-->
    <add key="AWSAccessKey" value="AWSAccessKey" />
    <!--Your AWS Secret Access Key-->
    <add key="AWSSecretKey" value="AWSSecretKey" />
    <!--Your AWS Region-->
    <add key="AWSRegion" value="us-east-1" />
    <!--
      Snapshot Expiration, in Days.
      In this example, Snapshots older than 30 days will be deleted.
      Comment out this line or set it to 0 to skip deletion of old snapshots.
    -->
    <add key="SnapshotExpiration" value="30" />
    <!--Snapshot OwnerId-->
    <add key="SnapshotOwnerId" value="self" />
    <!--Snapshot Tagging Key-->
    <add key="SnapshotTagKey" value="AutoSnapper" />
    <!--Snapshot Tagging Value-->
    <add key="SnapshotTagValue" value="Stone Fin AutoSnapper" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <RegisterInstances>
    <!--
      EC2 instances that will start up when the job is ran.
      If you do not wish to associate your instance with an ElasticIP,
      leave it out of the config.
    -->
    <InstancesToStart>
      <Instance instanceId="InstanceId1" elasticIp="255.255.255.0" />
      <Instance instanceId="InstanceId2" />
    </InstancesToStart>
    <!--EC2 instances that will stop when the job is ran.-->
    <InstancesToStop>
      <Instance instanceId="InstanceId1" />
      <Instance instanceId="InstanceId2" />
    </InstancesToStop>
  </RegisterInstances>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <targets>
      <target name="console" xsi:type="Console" layout="${date:format=HH\:MM\:ss} ${logger} ${message}" />
      <target name="file" xsi:type="File" layout="${longdate} ${logger} ${message} ${exception}${newline}" fileName="${basedir}/logs/logfile.txt" maxArchiveFiles="30" archiveFileName="${basedir}/archives/log.{#####}.txt" archiveAboveSize="5242880" archiveNumbering="Sequence" concurrentWrites="true" keepFileOpen="false" encoding="iso-8859-2" />
      <target xsi:type="BufferingWrapper" name="BufferedEmail" slidingTimeout="false" bufferSize="1000" flushTimeout="5000">
        <target name="Mail" xsi:type="Mail" subject="AutoSnapper Service Log: ${logger} (buffered)" layout="BEGINLOG|${longdate}|${level:uppercase=true}|${logger}|${newline} ${message} ${newline}|Exception:${exception} --${newline}" to="toaddress;" html="true" addNewLines="true" replaceNewlineWithBrTagInHtml="true" from="fromaddress" Encoding="UTF-8" smtpUsername="" enableSsl="False" smtpPassword="" smtpAuthentication="Basic" smtpServer="" smtpPort="" />
        <!-- todo update email target to have mandrill credentials? Maybe a build step for app.release.config, have credentials be encrypted?-->
      </target>
      <target xsi:type="Null" name="NullLogger" formatMessage="false" />
    </targets>
    <rules>
      <!-- Final=true discards processing next loggers for all matched writes. So this rule discards the spammy quartz scheduler. -->
      <logger name="*" minlevel="Trace" writeTo="file" />
      <logger name="*" minlevel="Error" writeTo="BufferedEmail" />
    </rules>
  </nlog>
</configuration>
